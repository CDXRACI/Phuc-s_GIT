ARM GAS  /tmp/cclNHSAV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  20              		.align	1
  21              		.global	EXTI1_IRQHandler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	EXTI1_IRQHandler:
  27              	.LFB132:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "ST3_INTERRUPT.h"
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cclNHSAV.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** void EXTI1_IRQHandler(void);
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** int flag2 =0;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c ****  int temp = LOGIC_LOW;
  58:Core/Src/main.c **** __STATE_OF_RCC_CONFIG_SW STATE_OF_RCC_CONFIG = RCC_UNKNOW_LOGIC;
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
ARM GAS  /tmp/cclNHSAV.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** RCC_CONFIG_SW(RCC_CONFIG_SW_ON,RCC_CONFIG_PWR_ON,"GPIOA");
  97:Core/Src/main.c **** GPIO_CONFIG_PA5_PA6();
  98:Core/Src/main.c **** INTERRUPT_SW_CONFIG();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Infinite loop */
 101:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 102:Core/Src/main.c ****   while (1)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** if(flag2 == 1)
 107:Core/Src/main.c ****   {
 108:Core/Src/main.c **** for(int i =0 ;i<10 ; i++ )
 109:Core/Src/main.c **** {
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     GPIOA_RE->GPIO_ODR_RE |= (1<<5);
 112:Core/Src/main.c **** HAL_Delay(1000);
 113:Core/Src/main.c ****     GPIOA_RE->GPIO_ODR_RE &= ~(1<<5);
 114:Core/Src/main.c **** HAL_Delay(1000);
 115:Core/Src/main.c ****     flag2 =0;
 116:Core/Src/main.c ****  
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   }
 119:Core/Src/main.c ****     GPIOA_RE->GPIO_ODR_RE |= (1<<6);
 120:Core/Src/main.c **** HAL_Delay(1000);
 121:Core/Src/main.c ****     GPIOA_RE->GPIO_ODR_RE &= ~(1<<6);
 122:Core/Src/main.c **** HAL_Delay(1000);
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /* USER CODE BEGIN 3 */
 126:Core/Src/main.c ****   
 127:Core/Src/main.c ****   /* USER CODE END 3 */
 128:Core/Src/main.c **** }
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /**
 132:Core/Src/main.c ****   * @brief System Clock Configuration
 133:Core/Src/main.c ****   * @retval None
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c **** void SystemClock_Config(void)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 138:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 143:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144:Core/Src/main.c **** 
ARM GAS  /tmp/cclNHSAV.s 			page 4


 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 146:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** void EXTI1_IRQHandler(){
  29              		.loc 1 177 24 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** if (EXTI->PR & (1<<1))    // If the PA1 triggered the interrupt
  34              		.loc 1 179 1 view .LVU1
  35              		.loc 1 179 9 is_stmt 0 view .LVU2
  36 0000 064B     		ldr	r3, .L3
  37 0002 5B69     		ldr	r3, [r3, #20]
  38              		.loc 1 179 4 view .LVU3
  39 0004 13F0020F 		tst	r3, #2
  40 0008 07D0     		beq	.L1
 180:Core/Src/main.c **** {
 181:Core/Src/main.c ****         flag2 = 1;
  41              		.loc 1 181 9 is_stmt 1 view .LVU4
  42              		.loc 1 181 15 is_stmt 0 view .LVU5
  43 000a 054B     		ldr	r3, .L3+4
  44 000c 0122     		movs	r2, #1
  45 000e 1A60     		str	r2, [r3]
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** 	EXTI->PR |= (1<<1);  // Clear the interrupt flag by writing a 1 
  46              		.loc 1 183 2 is_stmt 1 view .LVU6
ARM GAS  /tmp/cclNHSAV.s 			page 5


  47              		.loc 1 183 11 is_stmt 0 view .LVU7
  48 0010 024A     		ldr	r2, .L3
  49 0012 5369     		ldr	r3, [r2, #20]
  50 0014 43F00203 		orr	r3, r3, #2
  51 0018 5361     		str	r3, [r2, #20]
  52              	.L1:
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** }
  53              		.loc 1 185 1 view .LVU8
  54 001a 7047     		bx	lr
  55              	.L4:
  56              		.align	2
  57              	.L3:
  58 001c 003C0140 		.word	1073822720
  59 0020 00000000 		.word	.LANCHOR0
  60              		.cfi_endproc
  61              	.LFE132:
  63              		.section	.text.Error_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	Error_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	Error_Handler:
  71              	.LFB133:
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief GPIO Initialization Function
 189:Core/Src/main.c ****   * @param None
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /* USER CODE END 4 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** void Error_Handler(void)
 203:Core/Src/main.c **** {
  72              		.loc 1 203 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 204:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 205:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 206:Core/Src/main.c ****   __disable_irq();
  78              		.loc 1 206 3 view .LVU10
  79              	.LBB4:
  80              	.LBI4:
  81              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  /tmp/cclNHSAV.s 			page 6


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  /tmp/cclNHSAV.s 			page 7


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cclNHSAV.s 			page 8


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  82              		.loc 2 140 27 view .LVU11
  83              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  84              		.loc 2 142 3 view .LVU12
  85              		.syntax unified
  86              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  87 0000 72B6     		cpsid i
  88              	@ 0 "" 2
  89              		.thumb
  90              		.syntax unified
  91              	.L6:
  92              	.LBE5:
  93              	.LBE4:
 207:Core/Src/main.c ****   while (1)
  94              		.loc 1 207 3 discriminator 1 view .LVU13
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****   }
  95              		.loc 1 209 3 discriminator 1 view .LVU14
 207:Core/Src/main.c ****   while (1)
  96              		.loc 1 207 9 discriminator 1 view .LVU15
  97 0002 FEE7     		b	.L6
  98              		.cfi_endproc
  99              	.LFE133:
 101              		.section	.text.SystemClock_Config,"ax",%progbits
 102              		.align	1
 103              		.global	SystemClock_Config
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	SystemClock_Config:
 109              	.LFB131:
ARM GAS  /tmp/cclNHSAV.s 			page 9


 136:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110              		.loc 1 136 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 80
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 00B5     		push	{lr}
 115              	.LCFI0:
 116              		.cfi_def_cfa_offset 4
 117              		.cfi_offset 14, -4
 118 0002 95B0     		sub	sp, sp, #84
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 88
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121              		.loc 1 137 3 view .LVU17
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122              		.loc 1 137 22 is_stmt 0 view .LVU18
 123 0004 3022     		movs	r2, #48
 124 0006 0021     		movs	r1, #0
 125 0008 08A8     		add	r0, sp, #32
 126 000a FFF7FEFF 		bl	memset
 127              	.LVL0:
 138:Core/Src/main.c **** 
 128              		.loc 1 138 3 is_stmt 1 view .LVU19
 138:Core/Src/main.c **** 
 129              		.loc 1 138 22 is_stmt 0 view .LVU20
 130 000e 0023     		movs	r3, #0
 131 0010 0393     		str	r3, [sp, #12]
 132 0012 0493     		str	r3, [sp, #16]
 133 0014 0593     		str	r3, [sp, #20]
 134 0016 0693     		str	r3, [sp, #24]
 135 0018 0793     		str	r3, [sp, #28]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 136              		.loc 1 142 3 is_stmt 1 view .LVU21
 137              	.LBB6:
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 138              		.loc 1 142 3 view .LVU22
 139 001a 0193     		str	r3, [sp, #4]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 140              		.loc 1 142 3 view .LVU23
 141 001c 1F4A     		ldr	r2, .L13
 142 001e 116C     		ldr	r1, [r2, #64]
 143 0020 41F08051 		orr	r1, r1, #268435456
 144 0024 1164     		str	r1, [r2, #64]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 145              		.loc 1 142 3 view .LVU24
 146 0026 126C     		ldr	r2, [r2, #64]
 147 0028 02F08052 		and	r2, r2, #268435456
 148 002c 0192     		str	r2, [sp, #4]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 149              		.loc 1 142 3 view .LVU25
 150 002e 019A     		ldr	r2, [sp, #4]
 151              	.LBE6:
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 152              		.loc 1 142 3 view .LVU26
 143:Core/Src/main.c **** 
 153              		.loc 1 143 3 view .LVU27
 154              	.LBB7:
ARM GAS  /tmp/cclNHSAV.s 			page 10


 143:Core/Src/main.c **** 
 155              		.loc 1 143 3 view .LVU28
 156 0030 0293     		str	r3, [sp, #8]
 143:Core/Src/main.c **** 
 157              		.loc 1 143 3 view .LVU29
 158 0032 1B4B     		ldr	r3, .L13+4
 159 0034 1A68     		ldr	r2, [r3]
 160 0036 42F44042 		orr	r2, r2, #49152
 161 003a 1A60     		str	r2, [r3]
 143:Core/Src/main.c **** 
 162              		.loc 1 143 3 view .LVU30
 163 003c 1B68     		ldr	r3, [r3]
 164 003e 03F44043 		and	r3, r3, #49152
 165 0042 0293     		str	r3, [sp, #8]
 143:Core/Src/main.c **** 
 166              		.loc 1 143 3 view .LVU31
 167 0044 029B     		ldr	r3, [sp, #8]
 168              	.LBE7:
 143:Core/Src/main.c **** 
 169              		.loc 1 143 3 view .LVU32
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 170              		.loc 1 148 3 view .LVU33
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 171              		.loc 1 148 36 is_stmt 0 view .LVU34
 172 0046 0123     		movs	r3, #1
 173 0048 0893     		str	r3, [sp, #32]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 174              		.loc 1 149 3 is_stmt 1 view .LVU35
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 175              		.loc 1 149 30 is_stmt 0 view .LVU36
 176 004a 4FF48033 		mov	r3, #65536
 177 004e 0993     		str	r3, [sp, #36]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 178              		.loc 1 150 3 is_stmt 1 view .LVU37
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 179              		.loc 1 150 34 is_stmt 0 view .LVU38
 180 0050 0222     		movs	r2, #2
 181 0052 0E92     		str	r2, [sp, #56]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 182              		.loc 1 151 3 is_stmt 1 view .LVU39
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 183              		.loc 1 151 35 is_stmt 0 view .LVU40
 184 0054 4FF48003 		mov	r3, #4194304
 185 0058 0F93     		str	r3, [sp, #60]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 186              		.loc 1 152 3 is_stmt 1 view .LVU41
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 187              		.loc 1 152 30 is_stmt 0 view .LVU42
 188 005a 0423     		movs	r3, #4
 189 005c 1093     		str	r3, [sp, #64]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 190              		.loc 1 153 3 is_stmt 1 view .LVU43
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 191              		.loc 1 153 30 is_stmt 0 view .LVU44
 192 005e 6421     		movs	r1, #100
 193 0060 1191     		str	r1, [sp, #68]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
ARM GAS  /tmp/cclNHSAV.s 			page 11


 194              		.loc 1 154 3 is_stmt 1 view .LVU45
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 195              		.loc 1 154 30 is_stmt 0 view .LVU46
 196 0062 1292     		str	r2, [sp, #72]
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197              		.loc 1 155 3 is_stmt 1 view .LVU47
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198              		.loc 1 155 30 is_stmt 0 view .LVU48
 199 0064 1393     		str	r3, [sp, #76]
 156:Core/Src/main.c ****   {
 200              		.loc 1 156 3 is_stmt 1 view .LVU49
 156:Core/Src/main.c ****   {
 201              		.loc 1 156 7 is_stmt 0 view .LVU50
 202 0066 08A8     		add	r0, sp, #32
 203 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 204              	.LVL1:
 156:Core/Src/main.c ****   {
 205              		.loc 1 156 6 view .LVU51
 206 006c 88B9     		cbnz	r0, .L11
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 207              		.loc 1 163 3 is_stmt 1 view .LVU52
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 208              		.loc 1 163 31 is_stmt 0 view .LVU53
 209 006e 0F23     		movs	r3, #15
 210 0070 0393     		str	r3, [sp, #12]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 211              		.loc 1 165 3 is_stmt 1 view .LVU54
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 212              		.loc 1 165 34 is_stmt 0 view .LVU55
 213 0072 0223     		movs	r3, #2
 214 0074 0493     		str	r3, [sp, #16]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 215              		.loc 1 166 3 is_stmt 1 view .LVU56
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 216              		.loc 1 166 35 is_stmt 0 view .LVU57
 217 0076 0023     		movs	r3, #0
 218 0078 0593     		str	r3, [sp, #20]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 219              		.loc 1 167 3 is_stmt 1 view .LVU58
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 220              		.loc 1 167 36 is_stmt 0 view .LVU59
 221 007a 4FF48052 		mov	r2, #4096
 222 007e 0692     		str	r2, [sp, #24]
 168:Core/Src/main.c **** 
 223              		.loc 1 168 3 is_stmt 1 view .LVU60
 168:Core/Src/main.c **** 
 224              		.loc 1 168 36 is_stmt 0 view .LVU61
 225 0080 0793     		str	r3, [sp, #28]
 170:Core/Src/main.c ****   {
 226              		.loc 1 170 3 is_stmt 1 view .LVU62
 170:Core/Src/main.c ****   {
 227              		.loc 1 170 7 is_stmt 0 view .LVU63
 228 0082 0321     		movs	r1, #3
 229 0084 03A8     		add	r0, sp, #12
 230 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 231              	.LVL2:
 170:Core/Src/main.c ****   {
ARM GAS  /tmp/cclNHSAV.s 			page 12


 232              		.loc 1 170 6 view .LVU64
 233 008a 20B9     		cbnz	r0, .L12
 174:Core/Src/main.c **** 
 234              		.loc 1 174 1 view .LVU65
 235 008c 15B0     		add	sp, sp, #84
 236              	.LCFI2:
 237              		.cfi_remember_state
 238              		.cfi_def_cfa_offset 4
 239              		@ sp needed
 240 008e 5DF804FB 		ldr	pc, [sp], #4
 241              	.L11:
 242              	.LCFI3:
 243              		.cfi_restore_state
 158:Core/Src/main.c ****   }
 244              		.loc 1 158 5 is_stmt 1 view .LVU66
 245 0092 FFF7FEFF 		bl	Error_Handler
 246              	.LVL3:
 247              	.L12:
 172:Core/Src/main.c ****   }
 248              		.loc 1 172 5 view .LVU67
 249 0096 FFF7FEFF 		bl	Error_Handler
 250              	.LVL4:
 251              	.L14:
 252 009a 00BF     		.align	2
 253              	.L13:
 254 009c 00380240 		.word	1073887232
 255 00a0 00700040 		.word	1073770496
 256              		.cfi_endproc
 257              	.LFE131:
 259              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 260              		.align	2
 261              	.LC0:
 262 0000 4750494F 		.ascii	"GPIOA\000"
 262      4100
 263              		.section	.text.main,"ax",%progbits
 264              		.align	1
 265              		.global	main
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 270              	main:
 271              	.LFB130:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 272              		.loc 1 69 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 38B5     		push	{r3, r4, r5, lr}
 277              	.LCFI4:
 278              		.cfi_def_cfa_offset 16
 279              		.cfi_offset 3, -16
 280              		.cfi_offset 4, -12
 281              		.cfi_offset 5, -8
 282              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 283              		.loc 1 77 3 view .LVU69
 284 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/cclNHSAV.s 			page 13


 285              	.LVL5:
  84:Core/Src/main.c **** 
 286              		.loc 1 84 3 view .LVU70
 287 0006 FFF7FEFF 		bl	SystemClock_Config
 288              	.LVL6:
  96:Core/Src/main.c **** GPIO_CONFIG_PA5_PA6();
 289              		.loc 1 96 1 view .LVU71
 290 000a 1C4A     		ldr	r2, .L22
 291 000c 0321     		movs	r1, #3
 292 000e 0120     		movs	r0, #1
 293 0010 FFF7FEFF 		bl	RCC_CONFIG_SW
 294              	.LVL7:
  97:Core/Src/main.c **** INTERRUPT_SW_CONFIG();
 295              		.loc 1 97 1 view .LVU72
 296 0014 FFF7FEFF 		bl	GPIO_CONFIG_PA5_PA6
 297              	.LVL8:
  98:Core/Src/main.c **** 
 298              		.loc 1 98 1 view .LVU73
 299 0018 FFF7FEFF 		bl	INTERRUPT_SW_CONFIG
 300              	.LVL9:
 301 001c 27E0     		b	.L19
 302              	.LVL10:
 303              	.L18:
 304              	.LBB8:
 111:Core/Src/main.c **** HAL_Delay(1000);
 305              		.loc 1 111 5 discriminator 3 view .LVU74
 111:Core/Src/main.c **** HAL_Delay(1000);
 306              		.loc 1 111 27 is_stmt 0 discriminator 3 view .LVU75
 307 001e 184C     		ldr	r4, .L22+4
 308 0020 6369     		ldr	r3, [r4, #20]
 309 0022 43F02003 		orr	r3, r3, #32
 310 0026 6361     		str	r3, [r4, #20]
 112:Core/Src/main.c ****     GPIOA_RE->GPIO_ODR_RE &= ~(1<<5);
 311              		.loc 1 112 1 is_stmt 1 discriminator 3 view .LVU76
 312 0028 4FF47A70 		mov	r0, #1000
 313 002c FFF7FEFF 		bl	HAL_Delay
 314              	.LVL11:
 113:Core/Src/main.c **** HAL_Delay(1000);
 315              		.loc 1 113 5 discriminator 3 view .LVU77
 113:Core/Src/main.c **** HAL_Delay(1000);
 316              		.loc 1 113 27 is_stmt 0 discriminator 3 view .LVU78
 317 0030 6369     		ldr	r3, [r4, #20]
 318 0032 23F02003 		bic	r3, r3, #32
 319 0036 6361     		str	r3, [r4, #20]
 114:Core/Src/main.c ****     flag2 =0;
 320              		.loc 1 114 1 is_stmt 1 discriminator 3 view .LVU79
 321 0038 4FF47A70 		mov	r0, #1000
 322 003c FFF7FEFF 		bl	HAL_Delay
 323              	.LVL12:
 115:Core/Src/main.c ****  
 324              		.loc 1 115 5 discriminator 3 view .LVU80
 115:Core/Src/main.c ****  
 325              		.loc 1 115 11 is_stmt 0 discriminator 3 view .LVU81
 326 0040 104B     		ldr	r3, .L22+8
 327 0042 0022     		movs	r2, #0
 328 0044 1A60     		str	r2, [r3]
 108:Core/Src/main.c **** {
ARM GAS  /tmp/cclNHSAV.s 			page 14


 329              		.loc 1 108 22 is_stmt 1 discriminator 3 view .LVU82
 108:Core/Src/main.c **** {
 330              		.loc 1 108 23 is_stmt 0 discriminator 3 view .LVU83
 331 0046 0135     		adds	r5, r5, #1
 332              	.LVL13:
 333              	.L16:
 108:Core/Src/main.c **** {
 334              		.loc 1 108 15 is_stmt 1 discriminator 1 view .LVU84
 108:Core/Src/main.c **** {
 335              		.loc 1 108 1 is_stmt 0 discriminator 1 view .LVU85
 336 0048 092D     		cmp	r5, #9
 337 004a E8DD     		ble	.L18
 338              	.LVL14:
 339              	.L17:
 108:Core/Src/main.c **** {
 340              		.loc 1 108 1 discriminator 1 view .LVU86
 341              	.LBE8:
 119:Core/Src/main.c **** HAL_Delay(1000);
 342              		.loc 1 119 5 is_stmt 1 view .LVU87
 119:Core/Src/main.c **** HAL_Delay(1000);
 343              		.loc 1 119 27 is_stmt 0 view .LVU88
 344 004c 0C4C     		ldr	r4, .L22+4
 345 004e 6369     		ldr	r3, [r4, #20]
 346 0050 43F04003 		orr	r3, r3, #64
 347 0054 6361     		str	r3, [r4, #20]
 120:Core/Src/main.c ****     GPIOA_RE->GPIO_ODR_RE &= ~(1<<6);
 348              		.loc 1 120 1 is_stmt 1 view .LVU89
 349 0056 4FF47A70 		mov	r0, #1000
 350 005a FFF7FEFF 		bl	HAL_Delay
 351              	.LVL15:
 121:Core/Src/main.c **** HAL_Delay(1000);
 352              		.loc 1 121 5 view .LVU90
 121:Core/Src/main.c **** HAL_Delay(1000);
 353              		.loc 1 121 27 is_stmt 0 view .LVU91
 354 005e 6369     		ldr	r3, [r4, #20]
 355 0060 23F04003 		bic	r3, r3, #64
 356 0064 6361     		str	r3, [r4, #20]
 122:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 357              		.loc 1 122 1 is_stmt 1 view .LVU92
 358 0066 4FF47A70 		mov	r0, #1000
 359 006a FFF7FEFF 		bl	HAL_Delay
 360              	.LVL16:
 102:Core/Src/main.c ****   {
 361              		.loc 1 102 9 view .LVU93
 362              	.L19:
 102:Core/Src/main.c ****   {
 363              		.loc 1 102 3 view .LVU94
 106:Core/Src/main.c ****   {
 364              		.loc 1 106 1 view .LVU95
 106:Core/Src/main.c ****   {
 365              		.loc 1 106 10 is_stmt 0 view .LVU96
 366 006e 054B     		ldr	r3, .L22+8
 367 0070 1B68     		ldr	r3, [r3]
 106:Core/Src/main.c ****   {
 368              		.loc 1 106 3 view .LVU97
 369 0072 012B     		cmp	r3, #1
 370 0074 EAD1     		bne	.L17
ARM GAS  /tmp/cclNHSAV.s 			page 15


 371              	.LBB9:
 108:Core/Src/main.c **** {
 372              		.loc 1 108 9 view .LVU98
 373 0076 0025     		movs	r5, #0
 374 0078 E6E7     		b	.L16
 375              	.L23:
 376 007a 00BF     		.align	2
 377              	.L22:
 378 007c 00000000 		.word	.LC0
 379 0080 00000240 		.word	1073872896
 380 0084 00000000 		.word	.LANCHOR0
 381              	.LBE9:
 382              		.cfi_endproc
 383              	.LFE130:
 385              		.global	STATE_OF_RCC_CONFIG
 386              		.global	temp
 387              		.global	flag2
 388              		.section	.bss.flag2,"aw",%nobits
 389              		.align	2
 390              		.set	.LANCHOR0,. + 0
 393              	flag2:
 394 0000 00000000 		.space	4
 395              		.section	.bss.temp,"aw",%nobits
 396              		.align	2
 399              	temp:
 400 0000 00000000 		.space	4
 401              		.section	.data.STATE_OF_RCC_CONFIG,"aw"
 404              	STATE_OF_RCC_CONFIG:
 405 0000 04       		.byte	4
 406              		.text
 407              	.Letext0:
 408              		.file 3 "/home/cdp/Downloads/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default
 409              		.file 4 "/home/cdp/Downloads/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 410              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 411              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 412              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 413              		.file 8 "Core/Inc/ST3_INTERRUPT.h"
 414              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 415              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 416              		.file 11 "<built-in>"
ARM GAS  /tmp/cclNHSAV.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclNHSAV.s:20     .text.EXTI1_IRQHandler:0000000000000000 $t
     /tmp/cclNHSAV.s:26     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
     /tmp/cclNHSAV.s:58     .text.EXTI1_IRQHandler:000000000000001c $d
     /tmp/cclNHSAV.s:64     .text.Error_Handler:0000000000000000 $t
     /tmp/cclNHSAV.s:70     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cclNHSAV.s:102    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclNHSAV.s:108    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclNHSAV.s:254    .text.SystemClock_Config:000000000000009c $d
     /tmp/cclNHSAV.s:260    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cclNHSAV.s:264    .text.main:0000000000000000 $t
     /tmp/cclNHSAV.s:270    .text.main:0000000000000000 main
     /tmp/cclNHSAV.s:378    .text.main:000000000000007c $d
     /tmp/cclNHSAV.s:404    .data.STATE_OF_RCC_CONFIG:0000000000000000 STATE_OF_RCC_CONFIG
     /tmp/cclNHSAV.s:399    .bss.temp:0000000000000000 temp
     /tmp/cclNHSAV.s:393    .bss.flag2:0000000000000000 flag2
     /tmp/cclNHSAV.s:389    .bss.flag2:0000000000000000 $d
     /tmp/cclNHSAV.s:396    .bss.temp:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
RCC_CONFIG_SW
GPIO_CONFIG_PA5_PA6
INTERRUPT_SW_CONFIG
HAL_Delay
